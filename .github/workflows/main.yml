name: Main
on:
  push:
    branches: [ main ]
jobs:

  update:
    name: updating-repository
    runs-on: ubuntu-latest
    environment: 
      name: staging
    steps:
    - name: Updating repository
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd hml/${{ github.event.repository.name }}
          printf "\n\n updating repository....\n\n "
          git pull

        host: ${{ vars.HOST }}
        user: ${{ vars.SSH_USER }}
        key: ${{ secrets.SECRET_KEY }}

  build:
    name: build
    needs: update
    runs-on: ubuntu-latest
    environment: 
      name: staging
    steps:
    - name: building image
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd hml/${{ github.event.repository.name }}

          printf "\n\n generating docker image....\n\n "
          docker build -t ${{ github.event.repository.name }} .

        host: ${{ vars.HOST }}
        user: ${{ vars.SSH_USER }}
        key: ${{ secrets.SECRET_KEY }}

  deploy-hml:
    name: deploy-hml
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: staging
    steps:
    - name: starting server
      uses: fifsky/ssh-action@master
      with:
        command: |
          docker stop containerhml
          docker rm containerhml

          printf "\n\n starting docker server on port ${{ vars.INTERNAL_APP_PORT }} ....\n\n "
          docker run -d -p ${{ vars.INTERNAL_APP_PORT }}:8080 --name containerhml --restart=always ${{ github.event.repository.name }}:latest

        host: ${{ vars.HOST }}
        user: ${{ vars.SSH_USER }}
        key: ${{ secrets.SECRET_KEY }}

  deploy-prd:
    name: deploy-prd
    needs: deploy-hml
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
    - name: starting server
      uses: fifsky/ssh-action@master
      with:
        command: |
          docker stop containerprd
          docker rm containerprd

          printf "\n\n starting docker server on port ${{ vars.INTERNAL_APP_PORT }} ....\n\n "
          docker run -d -p ${{ vars.INTERNAL_APP_PORT }}:8080 --name containerprd --restart=always ${{ github.event.repository.name }}:latest

        host: ${{ vars.HOST }}
        user: ${{ vars.SSH_USER }}
        key: ${{ secrets.SECRET_KEY }}        